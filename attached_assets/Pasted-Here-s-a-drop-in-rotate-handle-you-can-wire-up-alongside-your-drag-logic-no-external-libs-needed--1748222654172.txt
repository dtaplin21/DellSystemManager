Here’s a drop-in “rotate handle” you can wire up alongside your drag logic—no external libs needed, just raw JS + CSS:

Add this CSS (e.g. in your main stylesheet):

css
Copy
Edit
/* small square in the top‐right corner for rotation */
.rotate-handle {
  position: absolute;
  width: 12px;
  height: 12px;
  background: var(--color-navy-950);
  right: -6px;
  top: -6px;
  border-radius: 50%;
  cursor: grab;
  z-index: 10;
}
In createVisualPanel(panel), after you set panelElement.style.* and before makePanelDraggable, append and hook up the handle:

js
Copy
Edit
// 1) ensure transforms happen around center
panelElement.style.transformOrigin = 'center center';

// 2) add rotate handle
const rotateHandle = document.createElement('div');
rotateHandle.className = 'rotate-handle';
panelElement.appendChild(rotateHandle);

// 3) wire up rotation logic
addRotateLogic(rotateHandle, panelElement, panel);

// now make it draggable
makePanelDraggable(panelElement, panel);
Implement addRotateLogic somewhere in your script:

js
Copy
Edit
function addRotateLogic(handle, panelEl, panelData) {
  let rotating = false;
  let startAngle = 0;
  let initialRot = panelData.rotation || 0;
  let center = { x:0, y:0 };

  handle.addEventListener('mousedown', e => {
    e.stopPropagation();
    rotating = true;
    // compute center of element
    const rect = panelEl.getBoundingClientRect();
    center = {
      x: rect.left + rect.width/2,
      y: rect.top  + rect.height/2
    };
    startAngle = Math.atan2(e.clientY - center.y, e.clientX - center.x);
    initialRot = panelData.rotation || 0;
    document.body.style.cursor = 'grabbing';
  });

  document.addEventListener('mousemove', e => {
    if (!rotating) return;
    const current = Math.atan2(e.clientY - center.y, e.clientX - center.x);
    const delta  = current - startAngle;
    const deg    = initialRot + delta * (180/Math.PI);
    panelData.rotation = deg;
    panelEl.style.transform = `rotate(${deg}deg)`;
  });

  document.addEventListener('mouseup', e => {
    if (!rotating) return;
    rotating = false;
    document.body.style.cursor = '';
    // you may want to persist panelData.x/y here if you recalc position after rotation
  });
}
