'use client';

import { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { AILayoutAction } from '@/services/canvasActionExecutor';

interface AIExecutionOverlayProps {
  isVisible: boolean;
  isExecuting: boolean;
  actions: AILayoutAction[];
  progress: { current: number; total: number };
  onExecute: () => void;
  onCancel: () => void;
}

export default function AIExecutionOverlay({
  isVisible,
  isExecuting,
  actions,
  progress,
  onExecute,
  onCancel
}: AIExecutionOverlayProps) {
  const [currentAction, setCurrentAction] = useState<string>('');

  // Update current action description based on progress
  useEffect(() => {
    if (progress.current > 0 && progress.current <= actions.length) {
      const action = actions[progress.current - 1];
      if (action) {
        switch (action.type) {
          case 'CREATE_PANEL':
            setCurrentAction(`Creating panel ${progress.current}`);
            break;
          case 'MOVE_PANEL':
            setCurrentAction(`Moving panel ${progress.current}`);
            break;
          case 'DELETE_PANEL':
            setCurrentAction(`Deleting panel ${progress.current}`);
            break;
          default:
            setCurrentAction(`Executing ${action.type} ${progress.current}`);
        }
      }
    }
  }, [progress.current, actions]);

  if (!isVisible) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-8 max-w-md w-full mx-4">
        <div className="text-center">
          {/* AI Brain Icon */}
          <div className="mb-6">
            <div className="w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center mx-auto">
              <div className="w-8 h-8 text-white">
                <svg fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
                </svg>
              </div>
            </div>
          </div>

          <h2 className="text-2xl font-bold text-gray-900 mb-2">
            {isExecuting ? 'AI Executing Layout' : 'AI Layout Ready'}
          </h2>
          
          <p className="text-gray-600 mb-6">
            {isExecuting 
              ? 'The AI is creating your panel layout...'
              : `${actions.length} panel actions generated by AI`
            }
          </p>

          {/* Progress Section */}
          {isExecuting && (
            <div className="mb-6">
              <div className="flex items-center justify-center space-x-2 mb-3">
                <div className="w-4 h-4 border-2 border-blue-500 border-t-transparent rounded-full animate-spin"></div>
                <span className="text-blue-600 font-medium">
                  {currentAction}
                </span>
              </div>
              
              {/* Progress Bar */}
              <div className="w-full bg-gray-200 rounded-full h-3 mb-2">
                <div 
                  className="bg-gradient-to-r from-blue-500 to-purple-600 h-3 rounded-full transition-all duration-500 ease-out"
                  style={{ width: `${(progress.current / progress.total) * 100}%` }}
                ></div>
              </div>
              
              <p className="text-sm text-gray-500">
                {progress.current} of {progress.total} actions completed
              </p>
            </div>
          )}

          {/* Action Buttons */}
          <div className="flex space-x-3">
            {!isExecuting && (
              <Button 
                onClick={onExecute}
                className="flex-1 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white"
              >
                Execute AI Layout
              </Button>
            )}
            
            <Button 
              variant="outline" 
              onClick={onCancel}
              className="flex-1"
              disabled={isExecuting}
            >
              {isExecuting ? 'Processing...' : 'Cancel'}
            </Button>
          </div>

          {/* AI Thinking Animation */}
          {isExecuting && (
            <div className="mt-6">
              <div className="flex justify-center space-x-1">
                <div className="w-2 h-2 bg-blue-500 rounded-full animate-bounce"></div>
                <div className="w-2 h-2 bg-blue-500 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
                <div className="w-2 h-2 bg-blue-500 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
              </div>
              <p className="text-xs text-gray-500 mt-2">AI is thinking...</p>
            </div>
          )}
        </div>
      </div>
    </div>
  );
} 